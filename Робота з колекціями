1 Керування списком завдання
using System;
using System.Collections.Generic;

class Task
{
    public int TaskId { get; set; }
    public string Description { get; set; }
}

class TaskManager
{
    private List<Task> tasks = new List<Task>();

    public void AddTask(Task task)
    {
        tasks.Add(task);
        Console.WriteLine($"Task added: {task.Description}");
    }

    public void RemoveTask(int taskId)
    {
        Task taskToRemove = tasks.Find(t => t.TaskId == taskId);
        if (taskToRemove != null)
        {
            tasks.Remove(taskToRemove);
            Console.WriteLine($"Task removed: {taskToRemove.Description}");
        }
        else
        {
            Console.WriteLine($"Task with TaskId {taskId} not found.");
        }
    }

    public void DisplayTasks()
    {
        Console.WriteLine("Tasks:");
        foreach (Task task in tasks)
        {
            Console.WriteLine($"TaskId: {task.TaskId}, Description: {task.Description}");
        }
    }
}

class Program
{
    static void Main()
    {
        TaskManager taskManager = new TaskManager();

        Task task1 = new Task { TaskId = 1, Description = "Complete assignment" };
        Task task2 = new Task { TaskId = 2, Description = "Read a book" };

        taskManager.AddTask(task1);
        taskManager.AddTask(task2);

        taskManager.DisplayTasks();

        taskManager.RemoveTask(1);

        taskManager.DisplayTasks();
    }
}

Завдання 2: Управління списком користувачів
using System;
using System.Collections.Generic;

class User
{
    public int Id { get; set; }
    public string Name { get; set; }
}

class UserManager
{
    private List<User> users = new List<User>();

    public void AddUser(User user)
    {
        users.Add(user);
        Console.WriteLine($"User added: {user.Name}");
    }

    public void RemoveUser(int userId)
    {
        User userToRemove = users.Find(u => u.Id == userId);
        if (userToRemove != null)
        {
            users.Remove(userToRemove);
            Console.WriteLine($"User removed: {userToRemove.Name}");
        }
        else
        {
            Console.WriteLine($"User with Id {userId} not found.");
        }
    }

    public User FindUserById(int userId)
    {
        return users.Find(u => u.Id == userId);
    }

    public void DisplayUsers()
    {
        Console.WriteLine("Users:");
        foreach (User user in users)
        {
            Console.WriteLine($"UserId: {user.Id}, Name: {user.Name}");
        }
    }
}

class Program
{
    static void Main()
    {
        UserManager userManager = new UserManager();

        User user1 = new User { Id = 1, Name = "John Doe" };
        User user2 = new User { Id = 2, Name = "Jane Doe" };

        userManager.AddUser(user1);
        userManager.AddUser(user2);

        userManager.DisplayUsers();

        userManager.RemoveUser(1);

        userManager.DisplayUsers();

        int userIdToFind = 2;
        User foundUser = userManager.FindUserById(userIdToFind);

        if (foundUser != null)
        {
            Console.WriteLine($"User found: UserId: {foundUser.Id}, Name: {foundUser.Name}");
        }
        else
        {
            Console.WriteLine($"User with UserId {userIdToFind} not found.");
        }
    }
}

